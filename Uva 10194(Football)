#include <bits/stdc++.h>
using namespace std;
struct team
{
    char name[105];
    int point, win, lose, tie, goaldice, goalkhaice;
    void init(){
       point = win = lose = tie = goaldice = goalkhaice=0;
    }
    void record(int a, int b){
      
    }
};
bool cmp(team a, team b)
{
    if(a.point!=b.point)return a.point>b.point;
    if(a.win!=b.win) return a.win>b.win;
    if((a.goaldice-a.goalkhaice)!=(b.goaldice-b.goalkhaice))return (a.goaldice-a.goalkhaice)>(b.goaldice-b.goalkhaice);
    if(a.goaldice!=b.goaldice)return a.goaldice>b.goaldice;
    if((a.win+a.lose+a.tie)!=(b.win+b.lose+b.tie))return (a.win+a.lose+a.tie)<(b.win+b.lose+b.tie);
    else{
        int len1= strlen(a.name);
        int len2 = strlen(b.name);
        for(int i=0; i<len1; i++){
            a.name[i]=tolower(a.name[i]);
        }
        for(int i=0; i<len2; i++){
            b.name[i]=tolower(b.name[i]);
        }
        return strcmp(a.name,b.name)<0;
    }
}
int main()
{
    int t;
    cin>>t;
    getchar();
    int n, m, cases = 0;
    char name[105], buf[105];
    map<string, int>mp;

    while(gets(name)){
         mp.clear();
         scanf("%d", &n);
         getchar();
         if(cases++) puts("");
         puts(name);
         team arr[50];
         for(int i=0; i<n; i++){
            gets(arr[i].name);
            arr[i].init();
            mp[arr[i].name]=i;
         }
         scanf("%d", &m);
         getchar();
         while(m--){
            gets(buf);
            char name1[50], name2[50];
            int num1, num2;
            sscanf(buf, "%[^#]#%d@%d#%[^\n]", name1, &num1, &num2, name2);
            //cout<<name1<<" "<<name2<<" "<<num1<<" "<<num2<<endl;
            if(num1>num2){
                arr[mp[name1]].point+=3;
                arr[mp[name1]].win++;
                arr[mp[name1]].goaldice+=num1;
                arr[mp[name1]].goalkhaice+=num2;
                arr[mp[name2]].lose++;
                arr[mp[name2]].goaldice+=num2;
                arr[mp[name2]].goalkhaice+=num1;


            }
            else if(num1<num2){
                arr[mp[name1]].lose++;
                arr[mp[name1]].goaldice+=num1;
                arr[mp[name1]].goalkhaice+=num2;
                arr[mp[name2]].win++;
                arr[mp[name2]].point+=3;
                arr[mp[name2]].goaldice+=num2;
                arr[mp[name2]].goalkhaice+=num1;

            }
            else{
                arr[mp[name1]].point++;
                arr[mp[name1]].tie++;
                arr[mp[name1]].goaldice+=num1;
                arr[mp[name1]].goalkhaice+=num2;
                arr[mp[name2]].point++;
                arr[mp[name2]].tie++;
                arr[mp[name2]].goaldice+=num2;
                arr[mp[name2]].goalkhaice+=num1;



            }
         }
         sort(arr,arr+n, cmp);
        for(int i=0; i<n; i++){
            cout<<i+1<<") "<<arr[i].name<<" "<<arr[i].point<<"p, "<<(arr[i].win+arr[i].lose+arr[i].tie)<<"g ("<<arr[i].win<<"-"<<arr[i].tie<<"-"<<arr[i].lose<<"), "<<(arr[i].goaldice-arr[i].goalkhaice)<<"gd ("<<arr[i].goaldice<<"-"<<arr[i].goalkhaice<<")"<<endl;
        }
    }
    
}
